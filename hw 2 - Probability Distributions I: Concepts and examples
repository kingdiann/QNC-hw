# %%
# -----------------
# Exercise 1
# -----------------

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import binom

# parameters
n = 10   # number of quanta
p = 0.2  # release probability

# possible outcomes: 0 to 10 quanta released
k = np.arange(0, n+1)

# exact binomial probabilities
probs = binom.pmf(k, n, p)

# print probabilities
for i, pr in zip(k, probs):
    print(f"P({i} quanta) = {pr:.4f}")

# plot
plt.bar(k, probs)
plt.xlabel('Number of quanta released')
plt.ylabel('Probability')
plt.title(f'Binomial Distribution (n={n}, p={p})')
plt.show()

# %%
# -----------------
# Exercise 2
# -----------------

# parameters
n = 14   # number of quanta
p = np.arange(0.1, 1.1, 0.1) # release probability 0.1 to 1
k = 8 # known quantal release

# exact binomial probabilities
probs = binom.pmf(k, n, p)

# print probabilities
for pi, pr in zip(p, probs):
    print(f"P(k={k} | p={pi:.1f}) = {pr:.6f}")

# plot
plt.bar(p, probs, width=0.05)
plt.xlabel('Release probability p')
plt.ylabel(f'P({k} quanta)')
plt.title(f'Binomial probabilities (n={n}, k={k})')
plt.show()

# %% [markdown] 
commentary 
